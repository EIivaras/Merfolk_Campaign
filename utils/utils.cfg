#textdomain wesnoth-merfolk_campaign

#util-0
## This macro recognises the main characters, has to be after retinue macro, on an event
#define RECOGNISE_VIU UNIT_ID TYPE

    [if]
        [have_unit]
            id={UNIT_ID}
        [/have_unit]
        [then][/then]
        [else]
            [unit]
                side=1
                id={UNIT_ID}
                name={UNIT_ID}
                type={TYPE}
                [modifications]
                    {TRAIT_LOYAL_HERO}
                [/modifications]
                placement=leader
            [/unit]
        [/else]
    [/if]

#enddef

#util1
## Macro I use to streamline variables
#define CREATE_NEW_VARIABLE NAME VALUE

    [event]
        name=prestart
        [set_variable]
            name={NAME}
            value={VALUE}
        [/set_variable]
    [/event]

#enddef

#util2
## Adjusted Desc's macro to give more options
#define LOYAL_NAMED_GUARD TYPE ID NAME_WML X Y SIDE

    [unit]
        type={TYPE}
        id={ID}
        {NAME_WML}
        ai_special=guardian
        x,y={X},{Y}
        side={SIDE}
        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
    [/unit]

#enddef

#util3
#define GUARD TYPE SIDE X Y

    [unit]
        type={TYPE}
        ai_special=guardian
        x,y={X},{Y}
        side={SIDE}
    [/unit]

#enddef

#util4
#define POTION_OF_VITALITY

    [object]
        id=potion1
        name= _ "Potion of Vitality"
        duration=forever
        silent=yes
        [filter]
            x,y=7,27
            side=1
        [/filter]
        [remove_item]
             x,y=7,27
        [/remove_item]
        [effect]
            apply_to=movement
            increase=1
        [/effect]
        [effect]
            apply_to=hitpoints
            increase=5
            increase_total=5
        [/effect]
    [/object]

#enddef

#util5
#define RING_OF_STRENGTH

    [object]
        id=ring1
        name= _ "Ring of Strength"
        duration=forever
        silent=yes
        [filter]
            x,y=5,5
            side=1
        [/filter]
        [remove_item]
            x,y=5,5
        [/remove_item]
        [effect]
            apply_to=attack
            increase_damage=1
        [/effect]
    [/object]

#enddef


#util6
##Macro for making units appear being animated
#define ANIMATED_UNIT SIDE TYPE TO_X TO_Y FROM_X FROM_Y WML

    [move_unit_fake]    
        type={TYPE}
        x={FROM_X},{TO_X}
        y={FROM_Y},{TO_Y}
        side={SIDE}
    [/move_unit_fake]
    {UNIT {SIDE} {TYPE} {TO_X} {TO_Y} {WML}}

#enddef


#util7
## Macro for handling moveto events where the player obtains an effect.
#define EVENT_MOVETO_HANDLER VARIABLE_NAME X Y SIDE RACE MSG_ACCEPT MSG_REJECT EFFECT_WML IS_OBJECT ADDITIONAL_EVENT_WML

    [set_variable]
        name=is_object
        value={IS_OBJECT}
    [/set_variable]
    ## Player takes the event right away
    [if]
        [variable]
            name={VARIABLE_NAME}
            equals=accepted
        [/variable]
        [then]
            [if]
                [variable]
                    name=is_object
                    equals=yes
                [/variable]
                [then]
                    {EFFECT_WML}
                [/then]
                [else]
                    [object]
                        silent=yes
                        [filter]
                            x,y={X},{Y}
                             side={SIDE}
                        [/filter]
                        [effect]
                            {EFFECT_WML}
                        [/effect]
                    [/object]
                [/else]
            [/if]
            {ADDITIONAL_EVENT_WML}
            [set_variable]
                name={VARIABLE_NAME}
                value=done
            [/set_variable]
        [/then]
        ## Player does not take it right away, thus, another event is created where the object has already been visited
        [else]
            [allow_undo][/allow_undo]
            [event]
                name=moveto
                first_time_only=no
                [filter]
                    x={X}
                    y={Y}
                    side={SIDE}
                    race={RACE}
                [/filter]
                [if]
                    [variable]
                        name={VARIABLE_NAME}
                        not_equals=done
                    [/variable]
                    [then]
                        [message]
                            speaker=unit
                            [option]
                                label={MSG_ACCEPT}
                                [command]
                                    [set_variable]
                                        name={VARIABLE_NAME}
                                        value=accepted
                                    [/set_variable]
                                [/command]
                            [/option]
                            [option]
                                label={MSG_REJECT}
                                [command]
                                    [set_variable]
                                        name={VARIABLE_NAME}
                                        value=visited
                                    [/set_variable]
                                [/command]
                            [/option]
                        [/message]
                    [/then]
                [/if]

                [if]
                    [variable]
                        name={VARIABLE_NAME}
                        equals=accepted
                    [/variable]
                    [then]
                        [if]
                            [variable]
                                name=is_object
                                equals=yes
                            [/variable]
                            [then]
                                {EFFECT_WML}
                            [/then]
                            [else]
                                [object]
                                    silent=yes
                                    [filter]
                                        x,y={X},{Y}
                                        side={SIDE}
                                    [/filter]
                                    [effect]
                                        {EFFECT_WML}
                                    [/effect]
                                [/object]
                            [/else]
                        [/if]
                        {ADDITIONAL_EVENT_WML}
                        [set_variable]
                            name={VARIABLE_NAME}
                            value=done
                        [/set_variable]
                    [/then]
                    [else]
                        [allow_undo][/allow_undo]
                    [/else]
                [/if]
            [/event]
        [/else]
    [/if]

#enddef

## ---------------------------------- S02 ----------------------------------


## util 8, Easy gold moveto events
#define MOVETO_GOLD_EVENT X Y SIDE AMOUNT
    [event]
        name=moveto
        first_time_only=yes
        [filter]
            side={SIDE}
            x={X}
            y={Y}
        [/filter]
        [gold]
            side={SIDE}
            amount={AMOUNT}
        [/gold]
        [message]
            speaker=narrator
            message= _ "You found {AMOUNT} pieces of gold."
        [/message]
    [/event]
#enddef

## util 9, Last breath event util
#define VIU_LAST_BREATH UNIT TEXT_STRING
    [event]
        name=last breath
        [filter]
            id={UNIT}
        [/filter]
        [message]
            speaker={UNIT}
            message={TEXT_STRING}
        [/message]
    [/event]
#enddef

## util 10, Recall retinue MACRO
#define RECALL_KAI_RETINUE
    [store_unit]
        [filter]
            side=1
            x,y=recall,recall
            role=retinue
        [/filter]
        kill=no
        variable=to_be_recalled
    [/store_unit]
    [foreach]
        array=to_be_recalled
        [do]
            [recall]
                id=$this_item.id
            [/recall]
        [/do]
    [/foreach]

    {CLEAR_VARIABLE to_be_recalled}
#enddef

## ---------------------------------------- S06b ---------------------------

##util 11, puts a unit with random xp (up to MAX_XP) to SIDE's recall list. Has to be inside prestart event.
#define UNIT_TO_RECALL_LIST SIDE TYPE ID ADDITIONAL_UNIT_WML MAX_XP
    {NAMED_UNIT {SIDE} {TYPE} 1 1 {ID} {ID} {ADDITIONAL_UNIT_WML}}
    [set_variable]
        name=tempxp
        rand=1..{MAX_XP}
    [/set_variable]
    [modify_unit]
        [filter]
            id={ID}
        [/filter]
        [effect]
            apply_to=experience
            set=$tempxp
        [/effect]
    [/modify_unit]
    {PUT_TO_RECALL_LIST (id={ID})}
    {CLEAR_VARIABLE tempxp}
#enddef

##util 12, makes the id bearers drop random items, the more items coded, the better.
#define DROP_OBJECT ID
    [event]
        name=prestart

        # Drop iterators

        {VARIABLE event_pos_iterator 0}
    [/event]
    [event]
        name=victory

        # Clear local variables

        {CLEAR_VARIABLE event_pos_iterator,event_position,2}
    [/event]
    [event]
        name=die
        first_time_only=no
        [filter]
            id={ID}
        [/filter]
        [store_unit]
            [filter]
                id=$unit.id
            [/filter]
            variable=object_drop_tempvar
        [/store_unit]
        # possible drops
        {RANDOM 1..4}
        # New event
        {VARIABLE_OP event_pos_iterator add 1}
        {VARIABLE event_position[$event_pos_iterator].x $object_drop_tempvar.x}
        {VARIABLE event_position[$event_pos_iterator].y $object_drop_tempvar.y}
        [switch]
            variable=random
            [case]
                value="1"
                {PLACE_IMAGE "items/gold-coins-large.png" $object_drop_tempvar.x $object_drop_tempvar.y}
                {SWITCH_EVENT_GOLD event_pos_iterator {ON_DIFFICULTY 150 125 100}}
            [/case]
            [case]
                value="2"
                {PLACE_IMAGE "items/gold-coins-medium.png" $object_drop_tempvar.x $object_drop_tempvar.y}
                {SWITCH_EVENT_GOLD event_pos_iterator {ON_DIFFICULTY 75 65 55}}
            [/case]
            [case]
                value="3"
                {PLACE_IMAGE "items/gold-coins-small.png" $object_drop_tempvar.x $object_drop_tempvar.y}
                {SWITCH_EVENT_GOLD event_pos_iterator {ON_DIFFICULTY 50 40 30}}
            [/case]
            [case]
                value="4"
                {PLACE_IMAGE "items/anvil.png" $object_drop_tempvar.x $object_drop_tempvar.y}
                {SWITCH_EVENT_CARCASS ( _ "Looks like this guy was guarding an anvil, should I use it?") ( _ "Yes, let’s sharpen my weapon!") ( _ "I’ll let someone else have a look.") 1 merman ( _ "Let’s do some blacksmithing!") ( _ "On second thought, I think I’ll just leave that alone too...") (
                    apply_to=attack
                    range=melee
                    increase_damage=1
                    ) (
                    [message]
                        speaker=unit
                        message= _ "Now this is a sharp weapon!"
                    [/message]) event_pos_iterator
                }
            [/case]
            # Else do nothing
            [else][/else] 
        [/switch]
        {CLEAR_VARIABLE object_drop_tempvar}
    [/event]
#enddef

## util 13, removes an image from X Y in an event
#define REMOVE_IMAGE_EVENT X Y
    [+event]
        {REMOVE_IMAGE {X} {Y}}
    [/event]
#enddef

##util 14, creates an event on item drop
#define EVENT_CARCASS_DROP EVENT_MSG_FIRSTIME EVENT_MSG_FIRSTIME_ACCEPT EVENT_MSG_FIRSTIME_REJECT VARIABLE_NAME X Y SIDE RACE MSG_ACCEPT MSG_REJECT EFFECT_WML ADDITIONAL_EVENT_WML STREAMLINED_EVENT_WML
    [event]
        name=moveto
        first_time_only=yes
        [filter]
            side=1
            x={X}
            y={Y}
            race={RACE}
        [/filter]
        [message]
            speaker=unit
            message={EVENT_MSG_FIRSTIME}
            [option]
                label={EVENT_MSG_FIRSTIME_ACCEPT}
                [command]
                    [set_variable]
                        name={VARIABLE_NAME}
                        value=accepted
                    [/set_variable]
                [/command]
            [/option]
            [option]
                label={EVENT_MSG_FIRSTIME_REJECT}
                [command]
                    [set_variable]
                        name={VARIABLE_NAME}
                        value=visited
                    [/set_variable]
                [/command]
            [/option]
        [/message]
    ## Player takes the event right away
    [if]
        [variable]
            name={VARIABLE_NAME}
            equals=accepted
        [/variable]
        [then]
            [object]
                silent=yes
                [filter]
                    x,y={X},{Y}
                    side={SIDE}
                [/filter]
                [effect]
                    {EFFECT_WML}
                [/effect]
            [/object]
            {ADDITIONAL_EVENT_WML}
            {STREAMLINED_EVENT_WML}
            [set_variable]
                name={VARIABLE_NAME}
                value=done
            [/set_variable]
        [/then]
        ## Player does not take it right away, thus, another event is created where the object has already been visited
        [else]
            [allow_undo][/allow_undo]
            [event]
                name=moveto
                first_time_only=no
                [filter]
                    x={X}
                    y={Y}
                    side={SIDE}
                    race={RACE}
                [/filter]
                [if]
                    [variable]
                        name={VARIABLE_NAME}
                        not_equals=done
                    [/variable]
                    [then]
                        [message]
                            speaker=unit
                            [option]
                                label={MSG_ACCEPT}
                                [command]
                                    [set_variable]
                                        name={VARIABLE_NAME}
                                        value=accepted
                                    [/set_variable]
                                [/command]
                            [/option]
                            [option]
                                label={MSG_REJECT}
                                [command]
                                    [set_variable]
                                        name={VARIABLE_NAME}
                                        value=visited
                                    [/set_variable]
                                [/command]
                            [/option]
                        [/message]
                    [/then]
                [/if]
                [if]
                    [variable]
                        name={VARIABLE_NAME}
                        equals=accepted
                    [/variable]
                    [then]
                        [object]
                            silent=yes
                            [filter]
                                x,y={X},{Y}
                                side={SIDE}
                            [/filter]
                            [effect]
                                {EFFECT_WML}
                            [/effect]
                        [/object]
                        {ADDITIONAL_EVENT_WML}
                        {STREAMLINED_EVENT_WML}
                        [set_variable]
                            name={VARIABLE_NAME}
                            value=done
                        [/set_variable]
                    [/then]
                    [else]
                        [allow_undo][/allow_undo]
                    [/else]
                [/if]
            [/event]
        [/else]
    [/if]
    [/event]
#enddef

##util 15, switch events I
#define SWITCH_EVENT_GOLD ITERATOR MORE_WML
    [switch]
        variable={ITERATOR}
        [case]
            value="1"
            {MOVETO_GOLD_EVENT $event_position[1].x $event_position[1].y 1 {MORE_WML}}{REMOVE_IMAGE_EVENT $event_position[1].x $event_position[1].y}
        [/case]
        [case]
            value="2"
            {MOVETO_GOLD_EVENT $event_position[2].x $event_position[2].y 1 {MORE_WML}}{REMOVE_IMAGE_EVENT $event_position[2].x $event_position[2].y}
        [/case]
        [case]
            value="3"
            {MOVETO_GOLD_EVENT $event_position[3].x $event_position[3].y 1 {MORE_WML}}{REMOVE_IMAGE_EVENT $event_position[3].x $event_position[3].y}
        [/case]
        [case]
            value="4"
            {MOVETO_GOLD_EVENT $event_position[4].x $event_position[4].y 1 {MORE_WML}}{REMOVE_IMAGE_EVENT $event_position[4].x $event_position[4].y}
        [/case]
        [case]
            value="5"
            {MOVETO_GOLD_EVENT $event_position[5].x $event_position[5].y 1 {MORE_WML}}{REMOVE_IMAGE_EVENT $event_position[5].x $event_position[5].y}
        [/case]
        [else][/else]
    [/switch]
#enddef

##util 16, switch events II
#define SWITCH_EVENT_CARCASS EVENT_MSG_FIRSTIME EVENT_MSG_FIRSTIME_ACCEPT EVENT_MSG_FIRSTIME_REJECT SIDE RACE MSG_ACCEPT MSG_REJECT EFFECT_WML ADDITIONAL_EVENT_WML ITERATOR
    [switch]
        variable={ITERATOR}
        [case]
            value="1"
            {EVENT_CARCASS_DROP {EVENT_MSG_FIRSTIME} {EVENT_MSG_FIRSTIME_ACCEPT} {EVENT_MSG_FIRSTIME_REJECT} drop_event_id_1 $event_position[1].x $event_position[1].y {SIDE} {RACE} {MSG_ACCEPT} {MSG_REJECT} {EFFECT_WML} {ADDITIONAL_EVENT_WML} {REMOVE_IMAGE $event_position[1].x $event_position[1].y}}
        [/case]
        [case]
            value="2"
            {EVENT_CARCASS_DROP {EVENT_MSG_FIRSTIME} {EVENT_MSG_FIRSTIME_ACCEPT} {EVENT_MSG_FIRSTIME_REJECT} drop_event_id_2 $event_position[2].x $event_position[2].y {SIDE} {RACE} {MSG_ACCEPT} {MSG_REJECT} {EFFECT_WML} {ADDITIONAL_EVENT_WML} {REMOVE_IMAGE $event_position[2].x $event_position[2].y}}
        [/case]
        [case]
            value="3"
            {EVENT_CARCASS_DROP {EVENT_MSG_FIRSTIME} {EVENT_MSG_FIRSTIME_ACCEPT} {EVENT_MSG_FIRSTIME_REJECT} drop_event_id_3 $event_position[3].x $event_position[3].y {SIDE} {RACE} {MSG_ACCEPT} {MSG_REJECT} {EFFECT_WML} {ADDITIONAL_EVENT_WML} {REMOVE_IMAGE $event_position[3].x $event_position[3].y}}
        [/case]
        [case]
            value="4"
            {EVENT_CARCASS_DROP {EVENT_MSG_FIRSTIME} {EVENT_MSG_FIRSTIME_ACCEPT} {EVENT_MSG_FIRSTIME_REJECT} drop_event_id_4 $event_position[4].x $event_position[4].y {SIDE} {RACE} {MSG_ACCEPT} {MSG_REJECT} {EFFECT_WML} {ADDITIONAL_EVENT_WML} {REMOVE_IMAGE $event_position[4].x $event_position[4].y}}
        [/case]
        [case]
            value="5"
            {EVENT_CARCASS_DROP {EVENT_MSG_FIRSTIME} {EVENT_MSG_FIRSTIME_ACCEPT} {EVENT_MSG_FIRSTIME_REJECT} drop_event_id_5 $event_position[5].x $event_position[5].y {SIDE} {RACE} {MSG_ACCEPT} {MSG_REJECT} {EFFECT_WML} {ADDITIONAL_EVENT_WML} {REMOVE_IMAGE $event_position[5].x $event_position[5].y}}
        [/case]
        [else][/else]
    [/switch]
#enddef

## --------------------------------------------- S07 ------------------------------------------